// <auto-generated />
using System;
using IPM.Infraestructure.MainContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IPM.Infraestructure.Migrations
{
    [DbContext(typeof(IntegrityProjectManagementContext))]
    partial class IntegrityProjectManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IPM.Infraestructure.MainContext.ActividadDiariaTimeReport", b =>
                {
                    b.Property<int>("IdActividadDiaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdActividad_Diaria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActividadDiaria"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaActividad")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_actividad");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("fechaFin");

                    b.Property<decimal?>("Hora")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("hora");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoActividad")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdActividadDiaria")
                        .HasName("PK__Activida__D7F54D10431475E8");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ActividadDiariaTimeReport", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Articulo", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idArticulo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticulo"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modelo");

                    b.Property<string>("TipoComplemento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_complemento");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdArticulo")
                        .HasName("PK__Articulo__AABB74229FE8C1AB");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.AsignacionArticulo", b =>
                {
                    b.Property<int>("IdAsignacionArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAsignacionArticulo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacionArticulo"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdArticulo")
                        .HasColumnType("int")
                        .HasColumnName("idArticulo");

                    b.Property<int?>("IdAsignacion")
                        .HasColumnType("int")
                        .HasColumnName("idAsignacion");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdAsignacionArticulo")
                        .HasName("PK__Asignaci__5D508DD06CA5DBB3");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdAsignacion");

                    b.ToTable("AsignacionArticulo", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.BajaEquipo", b =>
                {
                    b.Property<int>("IdBajaEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBajaEquipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBajaEquipo"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    b.Property<string>("MotivoBaja")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("motivoBaja");

                    b.Property<string>("Observacion")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("observacion");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdBajaEquipo")
                        .HasName("PK__BajaEqui__D88DE945F3052A76");

                    b.HasIndex("IdEquipo");

                    b.ToTable("BajaEquipo", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Catalogo", b =>
                {
                    b.Property<int>("IdCatalogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCatalogo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatalogo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<string>("Nemonico")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nemonico");

                    b.Property<string>("NombreMostrar")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreMostrar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdCatalogo")
                        .HasName("PK__Catalogo__C615E0E8B4977D70");

                    b.ToTable("Catalogos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("celular");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correoElectronico");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("idEmpresa");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("numeroIdentificacion");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("razonSocial");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("tipoIdentificacion");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdCliente")
                        .HasName("PK__Cliente__885457EE538DE97D");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.CursosTomado", b =>
                {
                    b.Property<int>("IdCursosTomadosPerfiles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCursosTomadosPerfiles");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCursosTomadosPerfiles"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaDesde")
                        .HasColumnType("date")
                        .HasColumnName("fechaDesde");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaHasta")
                        .HasColumnType("date")
                        .HasColumnName("fechaHasta");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<decimal?>("HoraCursoAvance")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("horaCursoAvance");

                    b.Property<decimal?>("HorasCurso")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("horasCurso");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("NombreCurso")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreCurso");

                    b.Property<string>("ProgresoPorcentaje")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("progresoPorcentaje");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdCursosTomadosPerfiles")
                        .HasName("PK__tmp_ms_x__B097D100EA8F3C29");

                    b.HasIndex("IdPersona");

                    b.ToTable("CursosTomados");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("celular");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("NumeroRuc")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("numeroRuc");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdEmpresa")
                        .HasName("PK__Empresa__5EF4033E6976A869");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Equipo", b =>
                {
                    b.Property<int>("IdEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipo"));

                    b.Property<string>("Batería")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("batería");

                    b.Property<string>("Camara")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("camara");

                    b.Property<string>("CargadorModel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cargadorModel");

                    b.Property<string>("Codigo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("codigo");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Conectividad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("conectividad");

                    b.Property<string>("DiscoDuro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("discoDuro");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<string>("ExpressServiceCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("expressServiceCode");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<string>("Lector")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lector");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("MarcaMouse")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("marcaMouse");

                    b.Property<string>("Memoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("memoria");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modelo");

                    b.Property<string>("ModeloMouse")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modeloMouse");

                    b.Property<string>("NombreEquipo")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nombreEquipo");

                    b.Property<string>("Office")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("office");

                    b.Property<string>("Pantalla")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pantalla");

                    b.Property<string>("Procesador")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("procesador");

                    b.Property<string>("Serial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serial");

                    b.Property<string>("SerieMouse")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("serieMouse");

                    b.Property<string>("ServiceTag")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serviceTag");

                    b.Property<string>("SistemaOperativo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sistemaOperativo");

                    b.Property<string>("Usb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usb");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdEquipo")
                        .HasName("PK__Equipo__981ACF53E5A51874");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.EquipoPersonaAsignacion", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAsignacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacion"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaAsignacion")
                        .HasColumnType("date")
                        .HasColumnName("fechaAsignacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("Observacion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("observacion");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdAsignacion")
                        .HasName("PK__Asignaci__E17144787D307395");

                    b.HasIndex("IdEquipo");

                    b.HasIndex("IdPersona");

                    b.ToTable("EquipoPersonaAsignacion", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.FeedbackProgresoHistorico", b =>
                {
                    b.Property<int>("IdFeedbackProgresoHistoricoPerfiles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFeedbackProgresoHistoricoPerfiles");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFeedbackProgresoHistoricoPerfiles"));

                    b.Property<string>("Alertas")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("alertas");

                    b.Property<string>("Entrevistas")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("entrevistas");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("observaciones");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdFeedbackProgresoHistoricoPerfiles")
                        .HasName("PK__Feedback__DB122367E0E6B12C");

                    b.HasIndex("IdPersona");

                    b.ToTable("FeedbackProgresoHistorico", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.HistorialLaboral", b =>
                {
                    b.Property<int>("IdHistorialPerfiles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHistorialPerfiles");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialPerfiles"));

                    b.Property<string>("Cargo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescripcionSalida")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("descripcionSalida");

                    b.Property<string>("Empresa")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("empresa");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaDesde")
                        .HasColumnType("date")
                        .HasColumnName("fechaDesde");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaHasta")
                        .HasColumnType("date")
                        .HasColumnName("fechaHasta");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdHistorialPerfiles")
                        .HasName("PK__Historia__74391BEE3158D928");

                    b.HasIndex("IdPersona");

                    b.ToTable("HistorialLaboral", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.LiderProyecto", b =>
                {
                    b.Property<int>("IdLiderProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLiderProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLiderProyecto"));

                    b.Property<int?>("IdLider")
                        .HasColumnType("int")
                        .HasColumnName("idLider");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int")
                        .HasColumnName("idProyecto");

                    b.HasKey("IdLiderProyecto")
                        .HasName("PK__LiderPro__A840E48CEF3898F5");

                    b.HasIndex("IdLider");

                    b.HasIndex("IdProyecto");

                    b.ToTable("LiderProyecto", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Lidere", b =>
                {
                    b.Property<int>("IdLider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLider");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLider"));

                    b.Property<bool>("EsLiderIntegritySolutions")
                        .HasColumnType("bit")
                        .HasColumnName("esLiderIntegritySolutions");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdLider")
                        .HasName("PK__Lider__4FAD779B0123F736");

                    b.HasIndex("IdPersona");

                    b.ToTable("Lideres");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Mantenimiento", b =>
                {
                    b.Property<int>("IdMantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMantenimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMantenimiento"));

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("costo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaMantenimineto")
                        .HasColumnType("date")
                        .HasColumnName("fechaMantenimineto");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    b.Property<string>("NombreRespueto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreRespueto");

                    b.Property<string>("NombreTecnico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreTecnico");

                    b.Property<string>("NumeroFactura")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numeroFactura");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdMantenimiento")
                        .HasName("PK__Mantenim__187F756A520E1318");

                    b.HasIndex("IdEquipo");

                    b.ToTable("Mantenimiento", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Pagina", b =>
                {
                    b.Property<int>("IdPagina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPagina");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPagina"));

                    b.Property<string>("Codigo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("codigo");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Ruta")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("ruta");

                    b.Property<string>("RutaPadre")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("rutaPadre");

                    b.Property<string>("RutaUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("rutaUrl");

                    b.HasKey("IdPagina")
                        .HasName("PK__Pagina__4AFCED6080ABB679");

                    b.ToTable("Pagina", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.PaginaRol", b =>
                {
                    b.Property<int>("IdPaginaRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaginaRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaginaRol"));

                    b.Property<int?>("IdPagina")
                        .HasColumnType("int")
                        .HasColumnName("idPagina");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdPaginaRol")
                        .HasName("PK__PaginaRo__564B6933A511D836");

                    b.HasIndex("IdPagina");

                    b.HasIndex("IdRol");

                    b.ToTable("PaginaRol", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoId"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermisoId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<int>("Cargo")
                        .HasColumnType("int")
                        .HasColumnName("cargo");

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("celular");

                    b.Property<string>("DireccionDomicilio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccionDomicilio");

                    b.Property<string>("EmailCorporativo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emailCorporativo");

                    b.Property<string>("EmailPersonal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emailPersonal");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaClave")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<int>("Genero")
                        .HasColumnType("int")
                        .HasColumnName("genero");

                    b.Property<string>("Github")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("github");

                    b.Property<string>("Imagen")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("imagen");

                    b.Property<string>("Linkedin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("linkedin");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombres");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("numeroIdentificacion");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("tipoIdentificacion");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdPersona")
                        .HasName("PK__Persona__A4788141B1CB1C28");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.PersonaProyectosAsignacion", b =>
                {
                    b.Property<int>("IdPersonaProyectos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonaProyectos"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPersonaProyectos");

                    b.HasIndex("PersonaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("PersonaProyectosAsignacion", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Proyecto", b =>
                {
                    b.Property<int>("IdProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProyecto"));

                    b.Property<string>("CodigoProyecto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigoProyecto");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaInicio");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdLiderPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("idLiderPrincipal");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdProyecto")
                        .HasName("PK__Proyecto__D0AF4CB42591483C");

                    b.HasIndex("IdCliente");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.RolUsuario", b =>
                {
                    b.Property<int>("RolUsuario1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolUsuario1"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<int>("RolesRolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RolUsuario1")
                        .HasName("PK__RolUsuar__3CC5365A43BC1155");

                    b.HasIndex("RolesRolId");

                    b.HasIndex(new[] { "UsuariosUsuarioId" }, "IX_RolUsuarios_UsuariosUsuarioId");

                    b.ToTable("RolUsuarios");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Role", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.RolesPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<int>("RolPermisoId")
                        .HasColumnType("int");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex(new[] { "PermisoId" }, "IX_RolesPermisos_PermisoId");

                    b.ToTable("RolesPermisos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.StackTecnologico", b =>
                {
                    b.Property<int>("IdStackTecnologico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idStackTecnologico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStackTecnologico"));

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaModificacion");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechacreacion");

                    b.Property<int?>("IdCatalogoStack")
                        .HasColumnType("int")
                        .HasColumnName("idCatalogoStack");

                    b.Property<int?>("IdNivelDominioTecnologico")
                        .HasColumnType("int")
                        .HasColumnName("idNivelDominioTecnologico");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("Tecnologias")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tecnologias");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioEliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdStackTecnologico")
                        .HasName("PK__StackTec__222C99F4E7665001");

                    b.HasIndex("IdPersona");

                    b.ToTable("StackTecnologico", (string)null);
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<DateTime?>("ActulizadaClave")
                        .HasColumnType("datetime");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo");

                    b.Property<bool?>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmarClave")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("nombreUsuario");

                    b.Property<bool?>("Restablecer")
                        .HasColumnType("bit");

                    b.HasKey("UsuarioId");

                    b.HasIndex("IdPersona");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.ActividadDiariaTimeReport", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("ActividadDiariaTimeReports")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Actividad_Diaria_Personas");

                    b.HasOne("IPM.Infraestructure.MainContext.Proyecto", "IdProyectoNavigation")
                        .WithMany("ActividadDiariaTimeReports")
                        .HasForeignKey("IdProyecto")
                        .HasConstraintName("FK__Actividad__IdPro__06CD04F7");

                    b.HasOne("IPM.Infraestructure.MainContext.Usuario", "Usuario")
                        .WithMany("ActividadDiariaTimeReports")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Actividad_Diaria_Usuarios");

                    b.Navigation("IdPersonaNavigation");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.AsignacionArticulo", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Articulo", "IdArticuloNavigation")
                        .WithMany("AsignacionArticulos")
                        .HasForeignKey("IdArticulo")
                        .HasConstraintName("FK_AsignacionArticulo_Articulo");

                    b.HasOne("IPM.Infraestructure.MainContext.EquipoPersonaAsignacion", "IdAsignacionNavigation")
                        .WithMany("AsignacionArticulos")
                        .HasForeignKey("IdAsignacion")
                        .HasConstraintName("FK_AsignacionArticulo_Asignacion");

                    b.Navigation("IdArticuloNavigation");

                    b.Navigation("IdAsignacionNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.BajaEquipo", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Equipo", "IdEquipoNavigation")
                        .WithMany("BajaEquipos")
                        .HasForeignKey("IdEquipo")
                        .HasConstraintName("FK_BajaEquipo_Equipo");

                    b.Navigation("IdEquipoNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Cliente", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Empresa", "IdEmpresaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK__Cliente__idEmpre__5812160E");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.CursosTomado", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("CursosTomados")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK__CursosTom__idPer__603D47BB");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.EquipoPersonaAsignacion", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Equipo", "IdEquipoNavigation")
                        .WithMany("EquipoPersonaAsignacions")
                        .HasForeignKey("IdEquipo")
                        .HasConstraintName("FK_Asignacion_Equipo");

                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("EquipoPersonaAsignacions")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Asignacion_Persona");

                    b.Navigation("IdEquipoNavigation");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.FeedbackProgresoHistorico", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("FeedbackProgresoHistoricos")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK__FeedbackP__idPer__5A846E65");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.HistorialLaboral", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("HistorialLaborals")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK__Historial__idPer__54CB950F");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.LiderProyecto", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Lidere", "IdLiderNavigation")
                        .WithMany("LiderProyectos")
                        .HasForeignKey("IdLider")
                        .HasConstraintName("FK_LiderProyecto_Lider");

                    b.HasOne("IPM.Infraestructure.MainContext.Proyecto", "IdProyectoNavigation")
                        .WithMany("LiderProyectos")
                        .HasForeignKey("IdProyecto")
                        .HasConstraintName("FK_LiderProyecto_Proyecto");

                    b.Navigation("IdLiderNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Lidere", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("Lideres")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK_Persona");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Mantenimiento", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Equipo", "IdEquipoNavigation")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("IdEquipo")
                        .HasConstraintName("FK_Mantenimiento_Equipo");

                    b.Navigation("IdEquipoNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.PaginaRol", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Pagina", "IdPaginaNavigation")
                        .WithMany("PaginaRols")
                        .HasForeignKey("IdPagina")
                        .HasConstraintName("FK__PaginaRol__idPag__318258D2");

                    b.HasOne("IPM.Infraestructure.MainContext.Role", "IdRolNavigation")
                        .WithMany("PaginaRols")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__PaginaRol__idRol__308E3499");

                    b.Navigation("IdPaginaNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.PersonaProyectosAsignacion", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "Persona")
                        .WithMany("PersonaProyectosAsignacions")
                        .HasForeignKey("PersonaId")
                        .IsRequired()
                        .HasConstraintName("FK_PersonaProyectosAsignacion_Personas");

                    b.HasOne("IPM.Infraestructure.MainContext.Proyecto", "Proyecto")
                        .WithMany("PersonaProyectosAsignacions")
                        .HasForeignKey("ProyectoId")
                        .IsRequired()
                        .HasConstraintName("FK_PersonaProyectosAsignacion_Proyectos");

                    b.Navigation("Persona");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Proyecto", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Cliente", "IdClienteNavigation")
                        .WithMany("Proyectos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__Proyecto__idClie__6B24EA82");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.RolUsuario", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Role", "RolesRol")
                        .WithMany("RolUsuarios")
                        .HasForeignKey("RolesRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPM.Infraestructure.MainContext.Usuario", "UsuariosUsuario")
                        .WithMany("RolUsuarios")
                        .HasForeignKey("UsuariosUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolesRol");

                    b.Navigation("UsuariosUsuario");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.RolesPermiso", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Permiso", "Permiso")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPM.Infraestructure.MainContext.Role", "Rol")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.StackTecnologico", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("StackTecnologicos")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK__StackTecn__idPer__5D60DB10");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Usuario", b =>
                {
                    b.HasOne("IPM.Infraestructure.MainContext.Persona", "IdPersonaNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Usuarios_Persona");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Articulo", b =>
                {
                    b.Navigation("AsignacionArticulos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Cliente", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Empresa", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Equipo", b =>
                {
                    b.Navigation("BajaEquipos");

                    b.Navigation("EquipoPersonaAsignacions");

                    b.Navigation("Mantenimientos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.EquipoPersonaAsignacion", b =>
                {
                    b.Navigation("AsignacionArticulos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Lidere", b =>
                {
                    b.Navigation("LiderProyectos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Pagina", b =>
                {
                    b.Navigation("PaginaRols");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Permiso", b =>
                {
                    b.Navigation("RolesPermisos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Persona", b =>
                {
                    b.Navigation("ActividadDiariaTimeReports");

                    b.Navigation("CursosTomados");

                    b.Navigation("EquipoPersonaAsignacions");

                    b.Navigation("FeedbackProgresoHistoricos");

                    b.Navigation("HistorialLaborals");

                    b.Navigation("Lideres");

                    b.Navigation("PersonaProyectosAsignacions");

                    b.Navigation("StackTecnologicos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Proyecto", b =>
                {
                    b.Navigation("ActividadDiariaTimeReports");

                    b.Navigation("LiderProyectos");

                    b.Navigation("PersonaProyectosAsignacions");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Role", b =>
                {
                    b.Navigation("PaginaRols");

                    b.Navigation("RolUsuarios");

                    b.Navigation("RolesPermisos");
                });

            modelBuilder.Entity("IPM.Infraestructure.MainContext.Usuario", b =>
                {
                    b.Navigation("ActividadDiariaTimeReports");

                    b.Navigation("RolUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
